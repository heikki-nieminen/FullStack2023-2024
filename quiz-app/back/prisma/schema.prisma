// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  username   String       @unique
  password   String
  is_admin   Boolean      @default(false)
  Quiz       Quiz[]
  QuizUser   QuizUser[]
  AnswerUser AnswerUser[]
}

model Quiz {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  creator    User       @relation(fields: [creator_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creator_id Int
  Question   Question[]
  QuizUser   QuizUser[]
}

model Question {
  id          Int      @id @default(autoincrement())
  name        String
  parent_quiz Quiz     @relation(fields: [quiz_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  quiz_id     Int
  Answer      Answer[]
}

model Answer {
  id              Int          @id @default(autoincrement())
  name            String
  correct         Boolean
  parent_question Question     @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  question_id     Int
  AnswerUser      AnswerUser[]
}

model QuizUser {
  id         Int          @id @default(autoincrement())
  quiz       Quiz         @relation(fields: [quiz_id], references: [id])
  quiz_id    Int
  user       User         @relation(fields: [user_id], references: [id])
  user_id    Int
  score      Int?
  AnswerUser AnswerUser[]
}

model AnswerUser {
  id         Int      @id @default(autoincrement())
  answer     Answer   @relation(fields: [answer_id], references: [id])
  answer_id  Int
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
  quiz_user  QuizUser @relation(fields: [quiz_id], references: [id])
  quiz_id    Int
  is_correct Boolean  @default(false)
}
